{"version":3,"sources":["../src/lib/spreader.js"],"names":["factorySpreaderGraph","ParentClassGraph","SpreaderGraph","collection","selector","config","arguments","constantField","Error","variableField"],"mappings":"i3BAAA;;;;;;;GAQA,QAASA,qBAAT,CAA8BC,gBAA9B,CAAgD,IACxCC,cADwC,wEAG5C;;;;;;OAOA,uBAAYC,UAAZ,CAAwBC,QAAxB,CAAkCC,MAAlC,CAA0C,0JAC/BC,SAD+B,GAGxC,GAAID,OAAOE,aAAX,CAA0B,MAAKA,aAAL,CAAqBF,OAAOE,aAA5B,CAA1B,IACK,MAAM,IAAIC,MAAJ,CAAU,qCAAV,CAAN,CAEL,GAAIH,OAAOI,aAAX,CAA0B,MAAKA,aAAL,CAAqBJ,OAAOI,aAA5B,CAA1B,IACK,MAAM,IAAID,MAAJ,CAAU,qCAAV,CAAN,CAPmC,YAQzC,CAlB2C,sBAClBP,gBADkB,EAqB9C,MAAOC,cACR,E,QAEQF,oB,CAAAA,oB","file":"spreader.js","sourcesContent":["/**\n * This method allows you to use SpreaderGraph class to its inheritance chain.\n * If using this graph, then in the spreadGraph field spreader is required.\n * \n * @param {Class} ParentClassGraph\n * @return {Class} SpreaderGraph\n * @description `import { factorySpreaderGraph } from 'ancient-graph-spreading';`\n */\nfunction factorySpreaderGraph(ParentClassGraph) {\n  class SpreaderGraph extends ParentClassGraph {\n    \n    /**\n     * @param {} collection - A pointer to the collection dannymineobhodimye daapteru to work with the graph. This may be a connection to the SQL database and table name, for example, or a collection of Mongo. \n     * @param {Object} fields - Comparison of the data in the collection of data in the graph. It is necessary for the adapter.\n     * @param {Object} config - Additional config.\n     * @param {String} config.constantField - Constant field in graph\n     * @param {String} config.variableField - Spreadable field in graph\n     */\n    constructor(collection, selector, config) {\n      super(...arguments);\n      \n      if (config.constantField) this.constantField = config.constantField;\n      else throw new Error('config.constantField is not defined');\n      \n      if (config.variableField) this.variableField = config.variableField;\n      else throw new Error('config.variableField is not defined');\n    }\n  }\n  \n  return SpreaderGraph;\n};\n\nexport { factorySpreaderGraph };"]}