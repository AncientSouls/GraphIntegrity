{"version":3,"sources":["../src/lib/respread.js"],"names":["factoryRespreadGraph","ParentClassSpreadGraph","RespreadGraph","modifier","callback","context","launched","selector","Object","prototype","toString","call","push"],"mappings":";;;;;;;;;;;;;;;;AAAA;;;;;;;;;;;AAWA,SAASA,oBAAT,CAA8BC,sBAA9B,EAAsD;AAAA,MAC9CC,aAD8C;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;;AAGlD;;;AAHkD,6BAM3CC,QAN2C,EAMjCC,QANiC,EAMvBC,OANuB,EAMd;AAClC,YAAI,CAACF,SAASG,QAAd,EAAwBH,SAASG,QAAT,GAAoB,CAAC,UAAD,CAApB;AACxB,oIAAoBH,QAApB,EAA8BC,QAA9B,EAAwCC,OAAxC;AACD;;AAED;;;;;AAXkD;AAAA;AAAA,6BAe3CE,QAf2C,EAejCH,QAfiC,EAevBC,OAfuB,EAed;AAClC,YAAI,CAACA,OAAL,EAAcA,UAAU,EAAEC,UAAU,CAAC,UAAD,CAAZ,EAAV,CAAd,KACK,IAAI,CAACD,QAAQC,QAAb,EAAuBD,QAAQC,QAAR,GAAmB,CAAC,UAAD,CAAnB,CAAvB,KACA;AACH,cAAIE,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BN,QAAQC,QAAvC,MAAqD,gBAAzD,EAA2E;AACzED,oBAAQC,QAAR,CAAiBM,IAAjB,CAAsB,UAAtB;AACD,WAFD,MAEO;AACLP,oBAAQC,QAAR,GAAmB,CAACD,QAAQC,QAAT,EAAmB,UAAnB,CAAnB;AACD;AACF;AACD,oIAAoBC,QAApB,EAA8BH,QAA9B,EAAwCC,OAAxC;AACD;AA1BiD;;AAAA;AAAA,IACxBJ,sBADwB;;AA6BpD,SAAOC,aAAP;AACD;;QAEQF,oB,GAAAA,oB","file":"respread.js","sourcesContent":["/**\n * This method allows you to use RespreadGraph class to its inheritance chain.\n * Lets perceive spread graph as a reason for the spreader graph.\n * Fields launched, process, prev, path and root is required!\n * Manage fields launched and process.\n * Parent class mast be extended from class SpreadGraph.\n * \n * @param {Class} ParentClassSpreadGraph\n * @return {Class} RespreadGraph\n * @description `import { factoryRespreadGraph } from 'ancient-graph-spreading';`\n */\nfunction factoryRespreadGraph(ParentClassSpreadGraph) {\n  class RespreadGraph extends ParentClassSpreadGraph {\n    \n    /**\n     * Parent insert with added 'respread' to launched field. You can override it field in modifier.\n     */\n    insert(modifier, callback, context) {\n      if (!modifier.launched) modifier.launched = ['respread'];\n      return super.insert(modifier, callback, context);\n    }\n    \n    /**\n     * The method is strictly designed so that the class inherits from ExistedGraph.\n     * Adds to launched field custom value from context.\n     */\n    remove(selector, callback, context) {\n      if (!context) context = { launched: ['respread'] };\n      else if (!context.launched) context.launched = ['respread'];\n      else {\n        if (Object.prototype.toString.call(context.launched) === '[object Array]') {\n          context.launched.push('respread');\n        } else {\n          context.launched = [context.launched, 'respread'];\n        }\n      }\n      return super.remove(selector, callback, context);\n    }\n  }\n  \n  return RespreadGraph;\n};\n\nexport { factoryRespreadGraph };"]}