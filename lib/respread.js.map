{"version":3,"sources":["../src/lib/respread.js"],"names":["factoryRespreadGraph","ParentClassSpreadGraph","RespreadGraph","modifier","callback","context","config","aliases","launched","selector","Object","prototype","toString","call","push"],"mappings":"08DAAA;;;;;;;;;;GAWA,QAASA,qBAAT,CAA8BC,sBAA9B,CAAsD,IAC9CC,cAD8C,qTAGlD;;OAHkD,sBAM3CC,QAN2C,CAMjCC,QANiC,CAMvBC,OANuB,CAMd,CAClC,GAAI,CAACF,SAAS,KAAKG,MAAL,CAAYC,OAAZ,CAAoBC,QAA7B,CAAL,CAA6CL,SAAS,KAAKG,MAAL,CAAYC,OAAZ,CAAoBC,QAA7B,EAAyC,CAAC,UAAD,CAAzC,CAC7C,uHAAoBL,QAApB,CAA8BC,QAA9B,CAAwCC,OAAxC,CACD,CAED;;;OAXkD,sCAe3CI,QAf2C,CAejCL,QAfiC,CAevBC,OAfuB,CAed,CAClC,GAAI,CAACA,OAAL,CAAcA,2BAAa,KAAKC,MAAL,CAAYC,OAAZ,CAAoBC,QAAjC,CAA4C,CAAC,UAAD,CAA5C,EAAd,IACK,IAAI,CAACH,QAAQ,KAAKC,MAAL,CAAYC,OAAZ,CAAoBC,QAA5B,CAAL,CAA4CH,QAAQ,KAAKC,MAAL,CAAYC,OAAZ,CAAoBC,QAA5B,EAAwC,CAAC,UAAD,CAAxC,CAA5C,IACA,CACH,GAAIE,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BR,QAAQ,KAAKC,MAAL,CAAYC,OAAZ,CAAoBC,QAA5B,CAA/B,IAA0E,gBAA9E,CAAgG,CAC9FH,QAAQ,KAAKC,MAAL,CAAYC,OAAZ,CAAoBC,QAA5B,EAAsCM,IAAtC,CAA2C,UAA3C,CACD,CAFD,IAEO,CACLT,QAAQ,KAAKC,MAAL,CAAYC,OAAZ,CAAoBC,QAA5B,EAAwC,CAACH,QAAQ,KAAKC,MAAL,CAAYC,OAAZ,CAAoBC,QAA5B,CAAD,CAAwC,UAAxC,CACzC,CACF,CACD,uHAAoBC,QAApB,CAA8BL,QAA9B,CAAwCC,OAAxC,CACD,CA1BiD,0BACxBJ,sBADwB,EA6BpD,MAAOC,cACR,E,QAEQF,oB,CAAAA,oB","file":"respread.js","sourcesContent":["/**\r\n * This method allows you to use RespreadGraph class to its inheritance chain.\r\n * Lets perceive spread graph as a reason for the spreader graph.\r\n * Fields launched, process, prev, path and root is required!\r\n * Manage fields launched and process.\r\n * Parent class mast be extended from class SpreadGraph.\r\n * \r\n * @param {Class} ParentClassSpreadGraph\r\n * @return {Class} RespreadGraph\r\n * @description `import { factoryRespreadGraph } from 'ancient-graph-spreading';`\r\n */\r\nfunction factoryRespreadGraph(ParentClassSpreadGraph) {\r\n  class RespreadGraph extends ParentClassSpreadGraph {\r\n    \r\n    /**\r\n     * Parent insert with added 'respread' to launched field. You can override it field in modifier.\r\n     */\r\n    insert(modifier, callback, context) {\r\n      if (!modifier[this.config.aliases.launched]) modifier[this.config.aliases.launched] = ['respread'];\r\n      return super.insert(modifier, callback, context);\r\n    }\r\n    \r\n    /**\r\n     * The method is strictly designed so that the class inherits from ExistedGraph.\r\n     * Adds to launched field custom value from context.\r\n     */\r\n    remove(selector, callback, context) {\r\n      if (!context) context = { [this.config.aliases.launched]: ['respread'] };\r\n      else if (!context[this.config.aliases.launched]) context[this.config.aliases.launched] = ['respread'];\r\n      else {\r\n        if (Object.prototype.toString.call(context[this.config.aliases.launched]) === '[object Array]') {\r\n          context[this.config.aliases.launched].push('respread');\r\n        } else {\r\n          context[this.config.aliases.launched] = [context[this.config.aliases.launched], 'respread'];\r\n        }\r\n      }\r\n      return super.remove(selector, callback, context);\r\n    }\r\n  }\r\n  \r\n  return RespreadGraph;\r\n};\r\n\r\nexport { factoryRespreadGraph };"]}