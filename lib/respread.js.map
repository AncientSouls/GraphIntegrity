{"version":3,"sources":["../src/lib/respread.js"],"names":["factoryRespreadGraph","ParentClassSpreadGraph","RespreadGraph","modifier","callback","context","launched","selector","Object","prototype","toString","call","push"],"mappings":"uxDAAA;;;;;;;;;;GAWA,QAASA,qBAAT,CAA8BC,sBAA9B,CAAsD,IAC9CC,cAD8C,qTAGlD;;OAHkD,sBAM3CC,QAN2C,CAMjCC,QANiC,CAMvBC,OANuB,CAMd,CAClC,GAAI,CAACF,SAASG,QAAd,CAAwBH,SAASG,QAAT,CAAoB,CAAC,UAAD,CAApB,CACxB,uHAAoBH,QAApB,CAA8BC,QAA9B,CAAwCC,OAAxC,CACD,CAED;;;OAXkD,sCAe3CE,QAf2C,CAejCH,QAfiC,CAevBC,OAfuB,CAed,CAClC,GAAI,CAACA,OAAL,CAAcA,QAAU,CAAEC,SAAU,CAAC,UAAD,CAAZ,CAAV,CAAd,IACK,IAAI,CAACD,QAAQC,QAAb,CAAuBD,QAAQC,QAAR,CAAmB,CAAC,UAAD,CAAnB,CAAvB,IACA,CACH,GAAIE,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BN,QAAQC,QAAvC,IAAqD,gBAAzD,CAA2E,CACzED,QAAQC,QAAR,CAAiBM,IAAjB,CAAsB,UAAtB,CACD,CAFD,IAEO,CACLP,QAAQC,QAAR,CAAmB,CAACD,QAAQC,QAAT,CAAmB,UAAnB,CACpB,CACF,CACD,uHAAoBC,QAApB,CAA8BH,QAA9B,CAAwCC,OAAxC,CACD,CA1BiD,0BACxBJ,sBADwB,EA6BpD,MAAOC,cACR,E,QAEQF,oB,CAAAA,oB","file":"respread.js","sourcesContent":["/**\n * This method allows you to use RespreadGraph class to its inheritance chain.\n * Lets perceive spread graph as a reason for the spreader graph.\n * Fields launched, process, prev, path and root is required!\n * Manage fields launched and process.\n * Parent class mast be extended from class SpreadGraph.\n * \n * @param {Class} ParentClassSpreadGraph\n * @return {Class} RespreadGraph\n * @description `import { factoryRespreadGraph } from 'ancient-graph-spreading';`\n */\nfunction factoryRespreadGraph(ParentClassSpreadGraph) {\n  class RespreadGraph extends ParentClassSpreadGraph {\n    \n    /**\n     * Parent insert with added 'respread' to launched field. You can override it field in modifier.\n     */\n    insert(modifier, callback, context) {\n      if (!modifier.launched) modifier.launched = ['respread'];\n      return super.insert(modifier, callback, context);\n    }\n    \n    /**\n     * The method is strictly designed so that the class inherits from ExistedGraph.\n     * Adds to launched field custom value from context.\n     */\n    remove(selector, callback, context) {\n      if (!context) context = { launched: ['respread'] };\n      else if (!context.launched) context.launched = ['respread'];\n      else {\n        if (Object.prototype.toString.call(context.launched) === '[object Array]') {\n          context.launched.push('respread');\n        } else {\n          context.launched = [context.launched, 'respread'];\n        }\n      }\n      return super.remove(selector, callback, context);\n    }\n  }\n  \n  return RespreadGraph;\n};\n\nexport { factoryRespreadGraph };"]}