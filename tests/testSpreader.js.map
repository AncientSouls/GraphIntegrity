{"version":3,"sources":["../src/tests/testSpreader.js"],"names":["testSpreader","generageGraphSpreading","ids","it","done","pathGraph","spreadGraph","spreaderGraph","graphSpreading","queueSpreading","on","oldLink","newLink","spreadBySpread","unspreadBySpread","spreadBySpreader","lengthOf","launched","fetch","undefined","error","results","deepEqual","source","target","id","process","spreader","prev","path","root","insert","graphLinkId0","graphLinkId1","graphLinkId2","unspreadBySpreader","update","length","remove","removed","spreadLinks","spreaderLinks"],"mappings":"sFAIwBA,Y,CAJxB,0BACA,qBACA,8B,+HAEe,QAASA,aAAT,CAAsBC,sBAAtB,CAA8CC,GAA9C,CAAmD,CAChEC,GAAG,mBAAH,CAAwB,SAASC,IAAT,CAAe,2BAC2CH,wBAD3C,CAC/BI,SAD+B,uBAC/BA,SAD+B,CACpBC,WADoB,uBACpBA,WADoB,CACPC,aADO,uBACPA,aADO,CACQC,cADR,uBACQA,cADR,CACwBC,cADxB,uBACwBA,cADxB,CAGrCH,YAAYI,EAAZ,CAAe,QAAf,CAAyB,SAACC,OAAD,CAAUC,OAAV,CAAsB,CAC7CH,eAAeI,cAAf,CAA8BD,OAA9B,CACD,CAFD,EAGAN,YAAYI,EAAZ,CAAe,QAAf,CAAyB,SAACC,OAAD,CAAUC,OAAV,CAAsB,CAC7CH,eAAeK,gBAAf,CAAgCH,OAAhC,CACD,CAFD,EAIAJ,cAAcG,EAAd,CAAiB,QAAjB,CAA2B,SAACC,OAAD,CAAUC,OAAV,CAAsB,CAC/CH,eAAeM,gBAAf,CAAgCR,aAAhC,CAA+CK,OAA/C,CACD,CAFD,EAIAL,cAAcG,EAAd,CAAiB,QAAjB,CAA2B,SAACC,OAAD,CAAUC,OAAV,CAAsB,CAC/C,aAAOI,QAAP,CAAgBJ,QAAQK,QAAxB,CAAkC,CAAlC,EACAX,YAAYY,KAAZ,CAAkB,EAAlB,CAAsBC,SAAtB,CAAiC,SAACC,KAAD,CAAQC,OAAR,CAAoB,CACnD,aAAOC,SAAP,CAAiBD,OAAjB,CAA0B,CACxB,CAAEE,OAAQ,GAAV,CAAeC,OAAQ,GAAvB,CAA4BC,GAAI,UAAhC,CACEC,QAAS,EADX,CACeC,SAAU,YADzB,CADwB,CAIxB,CAAEJ,OAAQ,GAAV,CAAeC,OAAQ,GAAvB,CAA4BC,GAAI,UAAhC,CACEG,KAAM,UADR,CACoBC,KAAM,QAD1B,CACoCC,KAAM,UAD1C,CAEEJ,QAAS,EAFX,CAEeC,SAAU,YAFzB,CAJwB,CAQxB,CAAEJ,OAAQ,GAAV,CAAeC,OAAQ,GAAvB,CAA4BC,GAAI,UAAhC,CACEG,KAAM,UADR,CACoBC,KAAM,QAD1B,CACoCC,KAAM,UAD1C,CAEEJ,QAAS,EAFX,CAEeC,SAAU,YAFzB,CARwB,CAYxB,CAAEJ,OAAQ,GAAV,CAAeC,OAAQ,GAAvB,CAA4BC,GAAI,UAAhC,CACEG,KAAM,UADR,CACoBC,KAAM,QAD1B,CACoCC,KAAM,UAD1C,CAEEJ,QAAS,EAFX,CAEeC,SAAU,YAFzB,CAZwB,CAA1B,EAiBAvB,MACD,CAnBD,CAoBD,CAtBD,EAwBAC,UAAU0B,MAAV,CAAiB,CAAER,OAAQrB,IAAI,CAAJ,CAAV,CAAkBsB,OAAQtB,IAAI,CAAJ,CAA1B,CAAjB,CAAqD,SAACkB,KAAD,CAAQY,YAAR,CAAyB,CAC5E3B,UAAU0B,MAAV,CAAiB,CAAER,OAAQrB,IAAI,CAAJ,CAAV,CAAkBsB,OAAQtB,IAAI,CAAJ,CAA1B,CAAjB,CAAqD,SAACkB,KAAD,CAAQa,YAAR,CAAyB,CAC5E5B,UAAU0B,MAAV,CAAiB,CAAER,OAAQrB,IAAI,CAAJ,CAAV,CAAkBsB,OAAQtB,IAAI,CAAJ,CAA1B,CAAjB,CAAqD,SAACkB,KAAD,CAAQc,YAAR,CAAyB,CAC5E3B,cAAcwB,MAAd,CAAqB,CAAER,OAAQrB,IAAI,CAAJ,CAAV,CAAkBsB,OAAQtB,IAAI,CAAJ,CAA1B,CAArB,CACD,CAFD,CAGD,CAJD,CAKD,CAND,CAOD,CA7CD,EA+CAC,GAAG,uCAAH,CAA4C,SAASC,IAAT,CAAe,4BACuBH,wBADvB,CACnDI,SADmD,wBACnDA,SADmD,CACxCC,WADwC,wBACxCA,WADwC,CAC3BC,aAD2B,wBAC3BA,aAD2B,CACZC,cADY,wBACZA,cADY,CACIC,cADJ,wBACIA,cADJ,CAGzDH,YAAYI,EAAZ,CAAe,QAAf,CAAyB,SAACC,OAAD,CAAUC,OAAV,CAAsB,CAC7CH,eAAeI,cAAf,CAA8BD,OAA9B,CACD,CAFD,EAGAN,YAAYI,EAAZ,CAAe,QAAf,CAAyB,SAACC,OAAD,CAAUC,OAAV,CAAsB,CAC7CH,eAAeK,gBAAf,CAAgCH,OAAhC,CACD,CAFD,EAIAJ,cAAcG,EAAd,CAAiB,QAAjB,CAA2B,SAACC,OAAD,CAAUC,OAAV,CAAsB,CAC/CH,eAAeM,gBAAf,CAAgCR,aAAhC,CAA+CK,OAA/C,CACD,CAFD,EAIAL,cAAcG,EAAd,CAAiB,QAAjB,CAA2B,SAACC,OAAD,CAAUC,OAAV,CAAsB,CAC/C,GAAID,QAAQY,MAAR,EAAkBX,QAAQW,MAA1B,EAAoCZ,QAAQa,MAAR,EAAkBZ,QAAQY,MAAlE,CAA0E,CACxEf,eAAe0B,kBAAf,CAAkC5B,aAAlC,CAAiDK,OAAjD,CACD,CAFD,IAEO,CACL,GAAIA,QAAQY,MAAR,EAAkBtB,IAAI,CAAJ,CAAtB,CAA8B,CAC5BK,cAAc6B,MAAd,CAAqBxB,QAAQa,EAA7B,CAAiC,CAAED,OAAQtB,IAAI,CAAJ,CAAV,CAAjC,CACD,CAFD,IAEO,CACL,GAAIU,QAAQK,QAAR,CAAiBoB,MAArB,CAA6B,CAC3B5B,eAAeM,gBAAf,CAAgCR,aAAhC,CAA+CK,OAA/C,CACD,CAFD,IAEO,CACLN,YAAYY,KAAZ,CAAkB,EAAlB,CAAsBC,SAAtB,CAAiC,SAACC,KAAD,CAAQC,OAAR,CAAoB,CACnD,aAAOC,SAAP,CAAiBD,OAAjB,CAA0B,CACxB,CAAEE,OAAQ,GAAV,CAAeC,OAAQ,GAAvB,CAA4BC,GAAI,UAAhC,CACEC,QAAS,EADX,CACeC,SAAU,YADzB,CADwB,CAIxB,CAAEJ,OAAQ,GAAV,CAAeC,OAAQ,GAAvB,CAA4BC,GAAI,UAAhC,CACEG,KAAM,UADR,CACoBC,KAAM,QAD1B,CACoCC,KAAM,UAD1C,CAEEJ,QAAS,EAFX,CAEeC,SAAU,YAFzB,CAJwB,CAQxB,CAAEJ,OAAQ,GAAV,CAAeC,OAAQ,GAAvB,CAA4BC,GAAI,UAAhC,CACEG,KAAM,UADR,CACoBC,KAAM,QAD1B,CACoCC,KAAM,UAD1C,CAEEJ,QAAS,EAFX,CAEeC,SAAU,YAFzB,CARwB,CAA1B,EAaAvB,MACD,CAfD,CAgBD,CACF,CACF,CACF,CA7BD,EA+BAC,UAAU0B,MAAV,CAAiB,CAAER,OAAQrB,IAAI,CAAJ,CAAV,CAAkBsB,OAAQtB,IAAI,CAAJ,CAA1B,CAAjB,CAAqD,SAACkB,KAAD,CAAQY,YAAR,CAAyB,CAC5E3B,UAAU0B,MAAV,CAAiB,CAAER,OAAQrB,IAAI,CAAJ,CAAV,CAAkBsB,OAAQtB,IAAI,CAAJ,CAA1B,CAAjB,CAAqD,SAACkB,KAAD,CAAQa,YAAR,CAAyB,CAC5E5B,UAAU0B,MAAV,CAAiB,CAAER,OAAQrB,IAAI,CAAJ,CAAV,CAAkBsB,OAAQtB,IAAI,CAAJ,CAA1B,CAAjB,CAAqD,SAACkB,KAAD,CAAQc,YAAR,CAAyB,CAC5E3B,cAAcwB,MAAd,CAAqB,CAAER,OAAQrB,IAAI,CAAJ,CAAV,CAAkBsB,OAAQtB,IAAI,CAAJ,CAA1B,CAArB,CACD,CAFD,CAGD,CAJD,CAKD,CAND,CAOD,CApDD,EAsDAC,GAAG,qBAAH,CAA0B,SAASC,IAAT,CAAe,4BACyCH,wBADzC,CACjCI,SADiC,wBACjCA,SADiC,CACtBC,WADsB,wBACtBA,WADsB,CACTC,aADS,wBACTA,aADS,CACMC,cADN,wBACMA,cADN,CACsBC,cADtB,wBACsBA,cADtB,CAGvCH,YAAYI,EAAZ,CAAe,QAAf,CAAyB,SAACC,OAAD,CAAUC,OAAV,CAAsB,CAC7CH,eAAeI,cAAf,CAA8BD,OAA9B,CACD,CAFD,EAGAN,YAAYI,EAAZ,CAAe,QAAf,CAAyB,SAACC,OAAD,CAAUC,OAAV,CAAsB,CAC7CH,eAAeK,gBAAf,CAAgCH,OAAhC,CACD,CAFD,EAIAJ,cAAcG,EAAd,CAAiB,QAAjB,CAA2B,SAACC,OAAD,CAAUC,OAAV,CAAsB,CAC/CH,eAAeM,gBAAf,CAAgCR,aAAhC,CAA+CK,OAA/C,CACD,CAFD,EAGAL,cAAcG,EAAd,CAAiB,QAAjB,CAA2B,SAACC,OAAD,CAAUC,OAAV,CAAsB,CAC/C,aAAOI,QAAP,CAAgBJ,QAAQK,QAAxB,CAAkC,CAAlC,EACAV,cAAc+B,MAAd,CAAqB1B,QAAQa,EAA7B,CACD,CAHD,EAIAlB,cAAcG,EAAd,CAAiB,QAAjB,CAA2B,SAACC,OAAD,CAAUC,OAAV,CAAsB,CAC/CH,eAAe0B,kBAAf,CAAkC5B,aAAlC,CAAiDI,OAAjD,CACD,CAFD,EAIAJ,cAAcgC,OAAd,CAAsB7B,EAAtB,CAAyB,QAAzB,CAAmC,SAACC,OAAD,CAAUC,OAAV,CAAsB,CACvD,aAAOI,QAAP,CAAgBJ,QAAQK,QAAxB,CAAkC,CAAlC,EACAX,YAAYY,KAAZ,CAAkB,EAAlB,CAAsBC,SAAtB,CAAiC,SAACC,KAAD,CAAQoB,WAAR,CAAwB,CACvD,aAAOxB,QAAP,CAAgBwB,WAAhB,CAA6B,CAA7B,EACAjC,cAAcW,KAAd,CAAoB,EAApB,CAAwBC,SAAxB,CAAmC,SAACC,KAAD,CAAQqB,aAAR,CAA0B,CAC3D,aAAOzB,QAAP,CAAgByB,aAAhB,CAA+B,CAA/B,EACArC,MACD,CAHD,CAID,CAND,CAOD,CATD,EAWAC,UAAU0B,MAAV,CAAiB,CAAER,OAAQrB,IAAI,CAAJ,CAAV,CAAkBsB,OAAQtB,IAAI,CAAJ,CAA1B,CAAjB,CAAqD,SAACkB,KAAD,CAAQY,YAAR,CAAyB,CAC5E3B,UAAU0B,MAAV,CAAiB,CAAER,OAAQrB,IAAI,CAAJ,CAAV,CAAkBsB,OAAQtB,IAAI,CAAJ,CAA1B,CAAjB,CAAqD,SAACkB,KAAD,CAAQa,YAAR,CAAyB,CAC5E5B,UAAU0B,MAAV,CAAiB,CAAER,OAAQrB,IAAI,CAAJ,CAAV,CAAkBsB,OAAQtB,IAAI,CAAJ,CAA1B,CAAjB,CAAqD,SAACkB,KAAD,CAAQc,YAAR,CAAyB,CAC5E3B,cAAcwB,MAAd,CAAqB,CAAER,OAAQrB,IAAI,CAAJ,CAAV,CAAkBsB,OAAQtB,IAAI,CAAJ,CAA1B,CAArB,CACD,CAFD,CAGD,CAJD,CAKD,CAND,CAOD,CAvCD,CAwCD","file":"testSpreader.js","sourcesContent":["import { assert } from 'chai';\r\nimport { factoryPathGraph, factorySpreadGraph, GraphSpreading, QueueSpreading } from '../';\r\nimport lodash from 'lodash';\r\n\r\nexport default function testSpreader(generageGraphSpreading, ids) {\r\n  it('#spreadBySpreader', function(done) {\r\n    var { pathGraph, spreadGraph, spreaderGraph, graphSpreading, queueSpreading } = generageGraphSpreading();\r\n    \r\n    spreadGraph.on('insert', (oldLink, newLink) => {\r\n      queueSpreading.spreadBySpread(newLink);\r\n    });\r\n    spreadGraph.on('remove', (oldLink, newLink) => {\r\n      queueSpreading.unspreadBySpread(oldLink);\r\n    });\r\n    \r\n    spreaderGraph.on('insert', (oldLink, newLink) => {\r\n      queueSpreading.spreadBySpreader(spreaderGraph, newLink);\r\n    });\r\n    \r\n    spreaderGraph.on('update', (oldLink, newLink) => {\r\n      assert.lengthOf(newLink.launched, 0);\r\n      spreadGraph.fetch({}, undefined, (error, results) => {\r\n        assert.deepEqual(results, [\r\n          { source: 'a', target: 'b', id: 'spread/0',\r\n            process: [], spreader: 'spreader/0'\r\n          },\r\n          { source: 'a', target: 'c', id: 'spread/1',\r\n            prev: 'spread/0', path: 'path/0', root: 'spread/0',\r\n            process: [], spreader: 'spreader/0'\r\n          },\r\n          { source: 'a', target: 'd', id: 'spread/2',\r\n            prev: 'spread/1', path: 'path/1', root: 'spread/0',\r\n            process: [], spreader: 'spreader/0'\r\n          },\r\n          { source: 'a', target: 'e', id: 'spread/3',\r\n            prev: 'spread/2', path: 'path/2', root: 'spread/0',\r\n            process: [], spreader: 'spreader/0'\r\n          },\r\n        ]);\r\n        done();\r\n      });\r\n    });\r\n    \r\n    pathGraph.insert({ source: ids[1], target: ids[2] }, (error, graphLinkId0) => {\r\n      pathGraph.insert({ source: ids[2], target: ids[3] }, (error, graphLinkId1) => {\r\n        pathGraph.insert({ source: ids[3], target: ids[4] }, (error, graphLinkId2) => {\r\n          spreaderGraph.insert({ source: ids[0], target: ids[1] });\r\n        });\r\n      });\r\n    });\r\n  });\r\n  \r\n  it('#unspreadBySpreader #spreadBySpreader', function(done) {\r\n    var { pathGraph, spreadGraph, spreaderGraph, graphSpreading, queueSpreading } = generageGraphSpreading();\r\n    \r\n    spreadGraph.on('insert', (oldLink, newLink) => {\r\n      queueSpreading.spreadBySpread(newLink);\r\n    });\r\n    spreadGraph.on('remove', (oldLink, newLink) => {\r\n      queueSpreading.unspreadBySpread(oldLink);\r\n    });\r\n    \r\n    spreaderGraph.on('insert', (oldLink, newLink) => {\r\n      queueSpreading.spreadBySpreader(spreaderGraph, newLink);\r\n    });\r\n    \r\n    spreaderGraph.on('update', (oldLink, newLink) => {\r\n      if (oldLink.source != newLink.source || oldLink.target != newLink.target) {\r\n        queueSpreading.unspreadBySpreader(spreaderGraph, newLink);\r\n      } else {\r\n        if (newLink.target == ids[1]) {\r\n          spreaderGraph.update(newLink.id, { target: ids[2] });\r\n        } else {\r\n          if (newLink.launched.length) {\r\n            queueSpreading.spreadBySpreader(spreaderGraph, newLink);\r\n          } else {\r\n            spreadGraph.fetch({}, undefined, (error, results) => {\r\n              assert.deepEqual(results, [\r\n                { source: 'a', target: 'c', id: 'spread/4',\r\n                  process: [], spreader: 'spreader/0'\r\n                },\r\n                { source: 'a', target: 'd', id: 'spread/5',\r\n                  prev: 'spread/4', path: 'path/1', root: 'spread/4',\r\n                  process: [], spreader: 'spreader/0'\r\n                },\r\n                { source: 'a', target: 'e', id: 'spread/6',\r\n                  prev: 'spread/5', path: 'path/2', root: 'spread/4',\r\n                  process: [], spreader: 'spreader/0'\r\n                },\r\n              ]);\r\n              done();\r\n            });\r\n          }\r\n        }\r\n      }\r\n    });\r\n    \r\n    pathGraph.insert({ source: ids[1], target: ids[2] }, (error, graphLinkId0) => {\r\n      pathGraph.insert({ source: ids[2], target: ids[3] }, (error, graphLinkId1) => {\r\n        pathGraph.insert({ source: ids[3], target: ids[4] }, (error, graphLinkId2) => {\r\n          spreaderGraph.insert({ source: ids[0], target: ids[1] });\r\n        });\r\n      });\r\n    });\r\n  });\r\n  \r\n  it('#unspreadBySpreader', function(done) {\r\n    var { pathGraph, spreadGraph, spreaderGraph, graphSpreading, queueSpreading } = generageGraphSpreading();\r\n    \r\n    spreadGraph.on('insert', (oldLink, newLink) => {\r\n      queueSpreading.spreadBySpread(newLink);\r\n    });\r\n    spreadGraph.on('remove', (oldLink, newLink) => {\r\n      queueSpreading.unspreadBySpread(oldLink);\r\n    });\r\n    \r\n    spreaderGraph.on('insert', (oldLink, newLink) => {\r\n      queueSpreading.spreadBySpreader(spreaderGraph, newLink);\r\n    });\r\n    spreaderGraph.on('update', (oldLink, newLink) => {\r\n      assert.lengthOf(newLink.launched, 0);\r\n      spreaderGraph.remove(newLink.id);\r\n    });\r\n    spreaderGraph.on('remove', (oldLink, newLink) => {\r\n      queueSpreading.unspreadBySpreader(spreaderGraph, oldLink);\r\n    });\r\n    \r\n    spreaderGraph.removed.on('update', (oldLink, newLink) => {\r\n      assert.lengthOf(newLink.launched, 0);\r\n      spreadGraph.fetch({}, undefined, (error, spreadLinks) => {\r\n        assert.lengthOf(spreadLinks, 0);\r\n        spreaderGraph.fetch({}, undefined, (error, spreaderLinks) => {\r\n          assert.lengthOf(spreaderLinks, 0);\r\n          done();\r\n        });\r\n      });\r\n    });\r\n    \r\n    pathGraph.insert({ source: ids[1], target: ids[2] }, (error, graphLinkId0) => {\r\n      pathGraph.insert({ source: ids[2], target: ids[3] }, (error, graphLinkId1) => {\r\n        pathGraph.insert({ source: ids[3], target: ids[4] }, (error, graphLinkId2) => {\r\n          spreaderGraph.insert({ source: ids[0], target: ids[1] });\r\n        });\r\n      });\r\n    });\r\n  });\r\n};"]}