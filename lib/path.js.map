{"version":3,"sources":["../src/lib/path.js"],"names":["AllowedFields","factoryPathGraph","ParentClassGraph","PathGraph","collection","selector","config","arguments","fromFields","Error","toFields"],"mappings":"i3BAAA,GAAIA,eAAgB,CAAC,QAAD,CAAW,QAAX,CAAqB,IAArB,CAApB,CAEA;;;;;;GAOA,QAASC,iBAAT,CAA0BC,gBAA1B,CAA4C,IACpCC,UADoC,oEAGxC;;;;;;;;OASA,mBAAYC,UAAZ,CAAwBC,QAAxB,CAAkCC,MAAlC,CAA0C,8IAC/BC,SAD+B,GAGxC,GAAID,OAAOE,UAAX,CAAuB,CACrB,MAAKA,UAAL,CAAkBF,OAAOE,UAC1B,CAFD,IAEO,MAAM,IAAIC,MAAJ,CAAU,kCAAV,CAAN,CAEP,GAAIH,OAAOI,QAAX,CAAqB,CACnB,MAAKA,QAAL,CAAgBJ,OAAOI,QACxB,CAFD,IAEO,MAAM,IAAID,MAAJ,CAAU,gCAAV,CAAN,CATiC,YAUzC,CAtBuC,kBAClBP,gBADkB,EAyB1C,MAAOC,UACR,E,QAEQF,gB,CAAAA,gB","file":"path.js","sourcesContent":["var AllowedFields = ['source', 'target', 'id'];\r\n\r\n/**\r\n * This method allows you to use PathGraph class to its inheritance chain.\r\n * \r\n * @param {Class} ParentClassGraph\r\n * @return {Class} PathGraph\r\n * @description `import { factoryPathGraph } from 'ancient-graph-spreading';`\r\n */\r\nfunction factoryPathGraph(ParentClassGraph) {\r\n  class PathGraph extends ParentClassGraph {\r\n    \r\n    /**\r\n     * Parent constrctor arguments taken in args array.\r\n     * \r\n     * @param {} collection - A pointer to the collection dannymineobhodimye daapteru to work with the graph. This may be a connection to the SQL database and table name, for example, or a collection of Mongo. \r\n     * @param {Object} fields - Comparison of the data in the collection of data in the graph. It is necessary for the adapter.\r\n     * @param {Object} config - Additional config.\r\n     * @param {string[]} config.fromFields - Start direction in path link\r\n     * @param {string[]} config.toFields - End direction in path link\r\n     */\r\n    constructor(collection, selector, config) {\r\n      super(...arguments);\r\n      \r\n      if (config.fromFields) {\r\n        this.fromFields = config.fromFields;\r\n      } else throw new Error('config.fromFields is not defined');\r\n      \r\n      if (config.toFields) {\r\n        this.toFields = config.toFields;\r\n      } else throw new Error('config.toFields is not defined');\r\n    }\r\n  }\r\n  \r\n  return PathGraph;\r\n};\r\n\r\nexport { factoryPathGraph };"]}